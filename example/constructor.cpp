#include <iostream>
using namespace std;

class A {
public:
    int x;    
    A(int x) : x(x) {
        cout << "默认构造函数" << endl;
    }

    A(A& a) : x(a.x) {
        cout << "拷贝/复制构造函数" << endl;
    }

    A& operator=(A& a) {
        x = a.x;
        cout << "拷贝赋值构造函数" << endl;
        return *this;
    }

    A(A&& a) : x(a.x) {
        cout << "移动构造函数" << endl;
    }

    A& operator=(A&& a) {
        x = a.x;
        cout << "移动赋值构造函数" << endl;
        return *this;
    }
};

A GetA() { return A(1); }
A&& MoveA() { return A(1); }

int main()
{
    cout << "-------------------------1-------------------------" << endl;
    A a(1);
    cout << "-------------------------2-------------------------" << endl;
    A b = a;
    cout << "-------------------------3-------------------------" << endl;
    A c(a);
    cout << "-------------------------4-------------------------" << endl;
    b = a;
    cout << "-------------------------5-------------------------" << endl;
    A d = A(1);
    cout << "-------------------------6-------------------------" << endl;
    A e = std::move(a);
    cout << "-------------------------7-------------------------" << endl;
    A f = GetA();
    cout << "-------------------------8-------------------------" << endl;
    A&& g = MoveA();
    cout << "-------------------------9-------------------------" << endl;
    d = A(1);
    cout << "-------------------------10------------------------" << endl;

    return 0;
}
